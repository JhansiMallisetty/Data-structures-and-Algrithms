1)

package main
 
import (
    "fmt"
    "math/rand"
    "time"
)
 
func main() {
 
    slice := generateSlice(20)
    fmt.Println("\n--- UnSorted --- \n\n", slice, "\n")
    bubblesort(slice)
    fmt.Println("\n--- Sorted ---\n\n", slice)
}
func generateSlice(size int) []int {
 
    slice := make([]int, size, size)
    rand.Seed(time.Now().UnixNano())
    for i := 0; i < size; i++ {
        slice[i] = rand.Intn(999) - rand.Intn(999)
    }
    return slice
}
  
func bubblesort(items []int) {
    var (
        n = len(items)
        sorted = false
    )
    for !sorted {
        swapped := false
        for i := 0; i < n-1; i++ {
            if items[i] > items[i+1] {
                items[i+1], items[i] = items[i], items[i+1]
                swapped = true
            }
        }
        if !swapped {
            sorted = true

}
        n = n - 1
    }
}

--- UnSorted --- 

 [-86 -816 -205 86 -106 -624 357 189 -263 149 419 125 -277 -72 235 117 -361 -321 528 -170] 


--- Sorted ---

 [-816 -624 -361 -321 -277 -263 -205 -170 -106 -86 -72 86 117 125 149 189 235 357 419 528]

Program exited.


2)

package main

import (
    "fmt"
)

var toBeSorted [10]int = [10]int{1,3,2,4,8,6,7,2,3,0}

func bubbleSort(input [10]int) {
    
    n := 10
    
    swapped := true
    
    for swapped {
        
        swapped = false
        
        for i := 1; i < n; i++ {
           
            if input[i-1] > input[i] {
                
                fmt.Println("Testing")
                
                input[i], input[i-1] = input[i-1], input[i]
                
                swapped = true
            }
        }
    }
    
    fmt.Println(input)
}

func main() {
    fmt.Println("Hello KloudOne")
    bubbleSort(toBeSorted)
}

Hello KloudOne
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
Testing
[0 1 2 2 3 3 4 6 7 8]

Program exited.

3)

package main
import "fmt"
func BubbleSort(numbers []int) []int {
   
   for i := len(numbers); i > 0; i-- {
      
      for j := 1; j < i; j++ {
         if numbers[j-1] > numbers[j] {
            intermediate := numbers[j]
            numbers[j] = numbers[j-1]
            numbers[j-1] = intermediate
                        }
             }
      }
   return numbers
 }
func main() {
    a := []int{2, 9, 15, 3, 1, 6, 12, 33, 45, 45, 45, 91, 99, 37, 52, 102, 104, 106, 109, 106}
    fmt.Println(BubbleSort(a))
}


[1 2 3 6 9 12 15 33 37 45 45 45 52 91 99 102 104 106 106 109]

Program exited.


4)

package main

import "fmt"

func main() {
    sample := []int{3, 4, 5, 2, 1}
    bubbleSort(sample)
    sample = []int{3, 4, 5, 2, 1, 7, 8, -1, -3}
    bubbleSort(sample)
}

func bubbleSort(arr []int) {
    len := len(arr)
    for i := 0; i < len-1; i++ {
        for j := 0; j < len-i-1; j++ {
            if arr[j] > arr[j+1] {
                arr[j], arr[j+1] = arr[j+1], arr[j]
            }
        }
    }
    fmt.Println("\nAfter Bubble Sorting")
    for _, val := range arr {
        fmt.Println(val)
    }
}


After Bubble Sorting
1
2
3
4
5

After Bubble Sorting
-3
-1
1
2
3
4
5
7
8

Program exited.

5)


package main

import "fmt"

func main() {

	x := []int{
		1, 2, 3, 4,
		5, 6, 7, 8,
		9, 10, 11, 12,
		13, 17, 19, 27,
	}

	end := len(x) - 1

	for {

		if end == 0 {
			break
		}

		for i := 0; i < len(x)-1; i++ {

			if x[i] > x[i+1] {
				x[i], x[i+1] = x[i+1], x[i]
			}

		}

		end -= 1

	}

	fmt.Println(x)

}

[1 2 3 4 5 6 7 8 9 10 11 12 13 17 19 27]

Program exited.

6)

 package main

 import (
 	"fmt"
 )

 func bubbleSort(tosort []int) {
 	size := len(tosort)
 	if size < 2 {
 		return
 	}
 	for i := 0; i < size; i++ {
 		for j := size - 1; j >= i+1; j-- {
 			if tosort[j] < tosort[j-1] {
 				tosort[j], tosort[j-1] = tosort[j-1], tosort[j]
 			}
 		}
 	}
 }

 func main() {
 	unsorted := []int{1, 10, 3, 2, 5, 8, 9, 2}
 	
 	fmt.Println("Before : ", unsorted)
 	
 	bubbleSort(unsorted)
 	
 	fmt.Println("After : ", unsorted)
 }


Before :  [1 10 3 2 5 8 9 2]

After :  [1 2 2 3 5 8 9 10]

Program exited.